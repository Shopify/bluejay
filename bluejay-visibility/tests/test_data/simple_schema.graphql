directive @visible on FIELD_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION | ARGUMENT_DEFINITION | SCALAR | OBJECT | INTERFACE | UNION | ENUM

enum MyEnum @visible {
  VISIBLE @visible
  NOT_VISIBLE
}

input MyInput @visible {
  visible: Int @visible
  notVisible: Int
  notVisibleByType: InvisibleScalar @visible
}

type MyObject @visible {
  visible(
    visible: MyInput @visible
    notVisible: Int
    notVisibleByType: InvisibleScalar @visible
  ): Int @visible
  notVisible: Int
}

union MyUnion @visible = MyObject | InvisibleObject

scalar MyScalar @visible

type Query @visible {
  myEnum: MyEnum @visible
  myObject: MyObject @visible
  myUnion: MyUnion @visible
  myScalar: MyScalar @visible
  invisibleEnum: InvisibleEnum @visible
  invisibleObject: InvisibleObject @visible
  invisibleUnion: InvisibleUnion @visible
  invisibleScalar: InvisibleScalar @visible
}

enum InvisibleEnum {
  VISIBLE @visible
}

input InvisibleInput {
  visible: Int @visible
}

type InvisibleObject {
  visible: Int @visible
}

union InvisibleUnion = MyObject | InvisibleObject

scalar InvisibleScalar
