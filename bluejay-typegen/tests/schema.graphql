"""
This is a doc string!
"""
enum MyEnum {
  VARIANT_1
  """
  This is a variant
  """
  VARIANT_2
}

enum Position {
  WING
  CENTRE
  DEFENCE
}

input MyInput {
  myField: String!
  myCircularField: MyInput
}

input MyOneOfInput @oneOf {
  # myString: String
  myInt: Int
}

type Query {
  myField(arg: MyEnum, arg1: MyInput): String
  myNestedField: MyType
  myRequiredField: String!
  player: Player!
  myEnum: MyEnum!
  myDecimals: [Decimal!]!
  builtinScalars: BuiltinScalars!
}

interface MyInterface {
  myField: String
}

type MyType implements MyInterface {
  myField: String
}

type Skater {
  name: String!
  position: Position!
  age: UnsignedInt!
  stats: [SkaterStat!]!
}

type SkaterStat {
  goals: UnsignedInt!
}

type Goalie {
  name: String!
  age: UnsignedInt!
  stats: [GoalieStat!]!
}

type GoalieStat {
  wins: UnsignedInt!
}

union Player = Skater | Goalie

union Stat = SkaterStat | GoalieStat

scalar Decimal

scalar UnsignedInt

type BuiltinScalars {
  int: Int!
  float: Float!
  string: String!
  boolean: Boolean!
  id: ID!
}

input BuiltinScalarsInput {
  int: Int!
  float: Float!
  string: String!
  boolean: Boolean!
  id: ID!
}
